package net.yunt.pamradio;

import com.codename1.io.Log;
import com.codename1.ui.*;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.layouts.LayeredLayout;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.components.SpanLabel;
import com.codename1.components.SpanButton;

import java.util.HashMap;
import java.util.List;
import java.util.Random;
import java.util.Map;

import static com.codename1.ui.CN.*;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
    private Map<Integer,List<Card>> cards;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {
        cards = CSVHelper.readFile();
        if (current != null) {
            current.show();
            return;
        }
        Form hi = new Form("PAM Radio Flashcards", new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER_ABSOLUTE));
        Button getStarted = new Button("Get Started!");
        FontImage.setMaterialIcon(getStarted, FontImage.MATERIAL_ARROW_FORWARD);
        hi.addComponent(BorderLayout.CENTER,
                LayeredLayout.encloseIn(
                        BoxLayout.encloseY(
                                new Label(theme.getImage("pamradio.jpg")),
                                getStarted
                        )
                )
        );

        getStarted.addActionListener((e) -> {
            //execute("https://www.codenameone.com/developers.html");
            showMenu();
        });

        hi.show();
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
    }

    public void showMenu() {


        Form hi = new Form("Sections", new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER));
        Button section1 = new Button("section 1");
        Button section2 = new Button("section 2");
        Button section3 = new Button("section 3");
        Button section4 = new Button("section 4");
        hi.addComponent(BorderLayout.NORTH,
                LayeredLayout.encloseIn(
                        BoxLayout.encloseY(
                                section1,
                                section2,
                                section3,
                                section4
                        )
                )
        );
        hi.show();
        section1.addActionListener((e) -> {
            showCard(1);
        });
        section2.addActionListener((e) -> {
            showCard(2);
        });
        section3.addActionListener((e) -> {
            showCard(3);
        });
        section4.addActionListener((e) -> {
            showCard(4);
        });
    }


    public void showCard(int section) {
        List<Card> cardsFortSection = cards.get(section);
        Random r = new Random();
        int index = r.nextInt(cardsFortSection.size());

        Form hi = new Form("PAM Radio Flashcards", new BorderLayout(BorderLayout.CENTER_BEHAVIOR_CENTER));
        Button shop = new Button("Buy a thing on amazon");
        Button back = new Button("Main Menu");
        SpanLabel question = new SpanLabel(cardsFortSection.get(index).getQuestion());
        Button answer = new Button("show answer");
        SpanLabel spacer = new SpanLabel("\n");
        Button next = new Button("next");
        hi.addComponent(BorderLayout.NORTH,
                LayeredLayout.encloseIn(
                        BoxLayout.encloseY(
                                question,
                                spacer,
                                answer,
                                next
                        )
                )
        );
        hi.addComponent(BorderLayout.SOUTH,
                LayeredLayout.encloseIn(
                        BoxLayout.encloseY(
                                shop,
                                back
                        )
                )
        );
        if(cardsFortSection.get(index).getProductLink() == null) {
            shop.setEnabled(false);
            shop.setVisible(false);
        }
        next.setEnabled(false);
        hi.show();
        answer.addActionListener((e) -> {
            spacer.setText("\n"+cardsFortSection.get(index).getAnswer());

            answer.setText("");
            answer.setEnabled(false);
            answer.setVisible(true);
            next.setEnabled(true);
            hi.refreshTheme();

        });
        next.addActionListener((e) -> {
            showCard(section);
        });
        back.addActionListener((e) -> {
            showMenu();
        });
        shop.addActionListener((e) -> {
            execute(cardsFortSection.get(index).getProductLink());
        });

    }
}
